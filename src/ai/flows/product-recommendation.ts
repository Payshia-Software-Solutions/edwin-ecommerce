// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A product recommendation AI agent.
 *
 * - getPersonalizedRecommendations - A function that handles the product recommendation process.
 * - ProductRecommendationInput - The input type for the getPersonalizedRecommendations function.
 * - ProductRecommendationOutput - The return type for the getPersonalizedRecommendations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ProductRecommendationInputSchema = z.object({
  purchaseHistory: z
    .string()
    .describe('The purchase history of the customer.'),
  trendingItems: z.string().describe('The current trending items.'),
});
export type ProductRecommendationInput = z.infer<
  typeof ProductRecommendationInputSchema
>;

const ProductRecommendationOutputSchema = z.object({
  recommendations: z
    .string()
    .describe('Personalized product recommendations for the customer.'),
});
export type ProductRecommendationOutput = z.infer<
  typeof ProductRecommendationOutputSchema
>;

export async function getPersonalizedRecommendations(
  input: ProductRecommendationInput
): Promise<ProductRecommendationOutput> {
  return personalizedProductRecommendationsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'personalizedProductRecommendationsPrompt',
  input: {schema: ProductRecommendationInputSchema},
  output: {schema: ProductRecommendationOutputSchema},
  prompt: `You are a personal shopping assistant.

You will receive the purchase history of a customer and a list of trending items.  You will use this information to generate personalized product recommendations for the customer.

Purchase History: {{{purchaseHistory}}}
Trending Items: {{{trendingItems}}}
`,
});

const personalizedProductRecommendationsFlow = ai.defineFlow(
  {
    name: 'personalizedProductRecommendationsFlow',
    inputSchema: ProductRecommendationInputSchema,
    outputSchema: ProductRecommendationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
